##
## Check GETTING_STARTED.markdown for additional properties and their default
## values.
##

liferay.workspace.bundle.dist.include.metadata=true
liferay.workspace.modules.dir=modules
liferay.workspace.themes.dir=themes
liferay.workspace.wars.dir=modules
microsoft.translator.subscription.key=

# Required
#
# Sets the Liferay product verison. Will also set a Liferay Docker image version.
# See https://releases.liferay.com/releases.json for more information.
liferay.workspace.product=dxp-2024.q3.8

# Optional
#
# Overrides the Liferay Docker image version defined in liferay.workspace.product
# Declare this only if you need a more specific version than the one provided
# through the product key above.
#
# You can also use this to reference a nightly build like liferay/dxp:7.4.13.nightly
liferay.workspace.docker.image.liferay=

# Optional
#
# Lists additional compose files to include
# You should not need to change this, it's mostly for debugging and testing.
lr.docker.environment.compose.files=

# Required
#
# Comma-separated list of "profiles" to include in your environment.
lr.docker.environment.compose.profiles=\
	liferay,\
	\
	elasticsearch,\
	mysql

# Optional
#
# Relative or absolute path to a directory containing data for the containers.
# These directories created from running docker-compose instances using:
#
# ./gradlew exportContainerData
lr.docker.environment.data.directory=

# Required if using a database
#
# The database name to use. Only needed if a database dump uses a different
# database name.
lr.docker.environment.database.name=lportal

# Optional
#
# Comma-separated list of URLs pointing to hotfixes. These will be automatically
# downloaded and copied to the Liferay container before startup.
lr.docker.environment.hotfix.urls=

# Required
#
# The namesapce to use for the docker-compose instance.
# You should not need to change this.
lr.docker.environment.namespace=lrwsde

# The number of cluster nodes to start up in addition to the main Liferay
# instance. Setting this to 0 means there is no clustering.
lr.docker.environment.cluster.nodes=0
